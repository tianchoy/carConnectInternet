{"code":"import { defineComponent as _defineComponent } from 'vue';\nimport { unref as _unref, o as _o, sei as _sei, toDisplayString as _toDisplayString, t as _t, f as _f, gei as _gei, e as _e } from \"vue\";\nexport default /*#__PURE__*/ _defineComponent(new UTSJSONObject({\n    __name: 'index',\n    setup(__props) {\n        // 地图状态\n        const center = reactive(new UTSJSONObject({\n            latitude: 39.90469,\n            longitude: 116.40717\n        }));\n        const mapScale = ref(14);\n        const currentMode = ref('draw');\n        // 电子围栏相关\n        const isDrawing = ref(false);\n        const points = ref([]);\n        const polygons = ref([]);\n        // 轨迹回放相关\n        const trackPoints = ref([]);\n        const polyline = ref([]);\n        const isPlaying = ref(false);\n        const playbackSpeed = ref(50);\n        const totalDistance = ref(0);\n        const playbackInterval = ref(null);\n        const currentIndex = ref(0);\n        const carMarker = ref(null);\n        // 标记点集合\n        const markers = ref([]);\n        // 高德地图实例\n        const amapFile = require('../../static/libs/amap-wx.130.js');\n        const amap = amapFile.AMapWX(new UTSJSONObject({ key: 'e3e773ad74f7ba25f38775c9c8db6474' }));\n        // 初始化加载测试轨迹\n        onMounted(() => {\n            loadSampleTrack();\n            polygons.value = [new UTSJSONObject({\n                    points: [\n                        new UTSJSONObject({ latitude: 39.911224745973904, longitude: 116.4004448639945 }),\n                        new UTSJSONObject({ latitude: 39.90158231816865, longitude: 116.39965115224538 }),\n                        new UTSJSONObject({ latitude: 39.90225756812269, longitude: 116.4126210618266 }),\n                        new UTSJSONObject({ latitude: 39.910544072055366, longitude: 116.41189424747824 })\n                    ],\n                    strokeWidth: 2,\n                    strokeColor: '#FF0000',\n                    fillColor: 'rgba(255,0,0,0.2)',\n                    zIndex: 1\n                })];\n        });\n        // 切换模式\n        const toggleMode = () => {\n            currentMode.value = currentMode.value === 'draw' ? 'track' : 'draw';\n            if (currentMode.value === 'track') {\n                initCarMarker();\n                resetPlayback();\n                adjustMapToFitTrack();\n            }\n        };\n        // 初始化小车标记\n        const initCarMarker = () => {\n            if (trackPoints.value.length > 0 && !carMarker.value) {\n                carMarker.value = new UTSJSONObject({\n                    id: 999,\n                    latitude: trackPoints.value[0].latitude,\n                    longitude: trackPoints.value[0].longitude,\n                    iconPath: '/static/car.png',\n                    width: 32,\n                    height: 32,\n                    anchor: new UTSJSONObject({ x: 0.5, y: 0.5 })\n                });\n                markers.value = [carMarker.value];\n            }\n        };\n        // 调整地图视野以适应轨迹\n        const adjustMapToFitTrack = () => {\n            if (trackPoints.value.length === 0)\n                return null;\n            const bounds = calculateTrackBounds();\n            center.latitude = (bounds.minLat + bounds.maxLat) / 2;\n            center.longitude = (bounds.minLng + bounds.maxLng) / 2;\n            // 根据轨迹范围自动计算合适的缩放级别\n            const latDiff = bounds.maxLat - bounds.minLat;\n            const lngDiff = bounds.maxLng - bounds.minLng;\n            const maxDiff = Math.max(latDiff, lngDiff);\n            if (maxDiff > 0.1)\n                mapScale.value = 11;\n            else if (maxDiff > 0.05)\n                mapScale.value = 12;\n            else if (maxDiff > 0.02)\n                mapScale.value = 13;\n            else\n                mapScale.value = 14;\n        };\n        // 计算轨迹边界\n        const calculateTrackBounds = () => {\n            let minLat = trackPoints.value[0].latitude;\n            let maxLat = trackPoints.value[0].latitude;\n            let minLng = trackPoints.value[0].longitude;\n            let maxLng = trackPoints.value[0].longitude;\n            trackPoints.value.forEach(point => {\n                minLat = Math.min(minLat, point.latitude);\n                maxLat = Math.max(maxLat, point.latitude);\n                minLng = Math.min(minLng, point.longitude);\n                maxLng = Math.max(maxLng, point.longitude);\n            });\n            return new UTSJSONObject({ minLat, maxLat, minLng, maxLng });\n        };\n        /* 电子围栏功能部分 */\n        const startDrawing = () => {\n            isDrawing.value = true;\n            points.value = [];\n            updateMapDisplay();\n        };\n        const handleMapTap = (e = null) => {\n            if (!isDrawing.value || currentMode.value !== 'draw')\n                return null;\n            addNewPoint(e.detail.latitude, e.detail.longitude);\n        };\n        const addPoint = () => {\n            uni.createSelectorQuery()\n                .select('#fenceMap')\n                .context((res = null) => {\n                const mapContext = res.context;\n                mapContext.getCenterLocation(new UTSJSONObject({\n                    success: (centerRes = null) => {\n                        addNewPoint(centerRes.latitude, centerRes.longitude);\n                    }\n                }));\n            })\n                .exec();\n        };\n        const addNewPoint = (lat, lng) => {\n            points.value.push({ latitude: lat, longitude: lng });\n            updateMapDisplay();\n        };\n        const removePoint = (index) => {\n            points.value.splice(index, 1);\n            updateMapDisplay();\n        };\n        const finishDrawing = () => {\n            if (points.value.length < 3) {\n                uni.showToast({ title: '至少需要3个顶点', icon: 'none' });\n                return null;\n            }\n            isDrawing.value = false;\n            uni.showToast({ title: `围栏创建成功，共${points.value.length}个顶点` });\n            uni.__f__('log', 'at pages/index/index.uvue:204', '电子围栏坐标:', UTS.JSON.stringify(points.value));\n        };\n        const clearAll = () => {\n            isDrawing.value = false;\n            points.value = [];\n            polygons.value = [];\n            updateMapDisplay();\n        };\n        /* 轨迹回放功能部分 */\n        const loadSampleTrack = () => {\n            // 模拟生成测试轨迹数据\n            const mockTrack = [];\n            const baseLat = 39.90469;\n            const baseLng = 116.40717;\n            for (let i = 0; i < 50; i++) {\n                mockTrack.push({\n                    latitude: baseLat + Math.sin(i / 10) * 0.01,\n                    longitude: baseLng + Math.cos(i / 10) * 0.01,\n                    timestamp: Date.now() - (50 - i) * 60000\n                });\n            }\n            trackPoints.value = mockTrack;\n            calculateTrackDistance();\n            updatePolyline();\n        };\n        const calculateTrackDistance = () => {\n            totalDistance.value = 0;\n            for (let i = 1; i < trackPoints.value.length; i++) {\n                totalDistance.value += getDistance(trackPoints.value[i - 1].latitude, trackPoints.value[i - 1].longitude, trackPoints.value[i].latitude, trackPoints.value[i].longitude);\n            }\n        };\n        // 计算两点间距离（米）\n        const getDistance = (lat1, lng1, lat2, lng2) => {\n            const rad = (d) => { return d * Math.PI / 180.0; };\n            const radLat1 = rad(lat1);\n            const radLat2 = rad(lat2);\n            const a = radLat1 - radLat2;\n            const b = rad(lng1) - rad(lng2);\n            const s = 2 * Math.asin(Math.sqrt(Math.pow(Math.sin(a / 2), 2) +\n                Math.cos(radLat1) * Math.cos(radLat2) * Math.pow(Math.sin(b / 2), 2)));\n            return s * 6378.137 * 1000;\n        };\n        const startPlayback = () => {\n            if (trackPoints.value.length === 0) {\n                uni.showToast({ title: '没有轨迹数据', icon: 'none' });\n                return null;\n            }\n            isPlaying.value = true;\n            currentIndex.value = 0;\n            // 确保小车标记已初始化\n            initCarMarker();\n            // 开始播放\n            playbackInterval.value = setInterval(playNextPoint, 1000 / playbackSpeed.value);\n        };\n        const playNextPoint = () => {\n            if (currentIndex.value >= trackPoints.value.length - 1) {\n                pausePlayback();\n                return null;\n            }\n            currentIndex.value++;\n            const point = trackPoints.value[currentIndex.value];\n            // 只更新小车位置，不更新地图中心\n            if (carMarker.value) {\n                carMarker.value.latitude = point.latitude;\n                carMarker.value.longitude = point.longitude;\n                markers.value = [carMarker.value];\n            }\n        };\n        const pausePlayback = () => {\n            isPlaying.value = false;\n            if (playbackInterval.value) {\n                clearInterval(playbackInterval.value);\n                playbackInterval.value = null;\n            }\n        };\n        // 重置回放\n        const resetPlayback = () => {\n            pausePlayback();\n            currentIndex.value = 0;\n            updatePolyline();\n            // 安全地重置小车位置\n            if (trackPoints.value.length > 0) {\n                initCarMarker();\n                if (carMarker.value) {\n                    carMarker.value.latitude = trackPoints.value[0].latitude;\n                    carMarker.value.longitude = trackPoints.value[0].longitude;\n                    markers.value = [carMarker.value];\n                }\n            }\n        };\n        const clearTrack = () => {\n            pausePlayback();\n            trackPoints.value = [];\n            polyline.value = [];\n            totalDistance.value = 0;\n            carMarker.value = null;\n            markers.value = [];\n        };\n        const setPlaybackSpeed = (e = null) => {\n            playbackSpeed.value = e.detail.value;\n            if (isPlaying.value) {\n                pausePlayback();\n                startPlayback();\n            }\n        };\n        const updatePolyline = () => {\n            if (!trackPoints.value || trackPoints.value.length === 0) {\n                polyline.value = [];\n                return null;\n            }\n            polyline.value = [new UTSJSONObject({\n                    points: trackPoints.value.map(p => { return (new UTSJSONObject({ latitude: p.latitude, longitude: p.longitude })); }),\n                    color: '#1890FF',\n                    width: 4,\n                    arrowLine: true,\n                    borderColor: '#FFF',\n                    borderWidth: 2\n                })];\n        };\n        /* 通用地图更新方法 */\n        const updateMapDisplay = () => {\n            // 更新标记点\n            const newMarkers = [];\n            // 添加围栏顶点标记\n            if (currentMode.value === 'draw') {\n                newMarkers.push(...points.value.map((point, index) => { return (new UTSJSONObject({\n                    id: index + 1,\n                    latitude: point.latitude,\n                    longitude: point.longitude,\n                    iconPath: '/static/marker.png',\n                    width: 20,\n                    height: 20,\n                    callout: new UTSJSONObject({ content: `顶点${index + 1}`, display: 'ALWAYS' })\n                })); }));\n            }\n            // 添加车辆标记\n            if (carMarker.value) {\n                newMarkers.push(carMarker.value);\n            }\n            markers.value = newMarkers;\n            // 更新围栏多边形\n            if (currentMode.value === 'draw' && points.value.length >= 3) {\n                polygons.value = [new UTSJSONObject({\n                        points: points.value,\n                        strokeWidth: 2,\n                        strokeColor: '#FF0000',\n                        fillColor: 'rgba(255,0,0,0.2)',\n                        zIndex: 1\n                    })];\n            }\n            else {\n                polygons.value = [];\n            }\n            // 更新轨迹线\n            if (currentMode.value === 'track') {\n                updatePolyline();\n            }\n        };\n        return (_ctx = null, _cache = null) => {\n            const __returned__ = _e(new UTSJSONObject({\n                a: _sei('fenceMap', 'map'),\n                b: _unref(center).latitude,\n                c: _unref(center).longitude,\n                d: _unref(polygons),\n                e: _unref(markers),\n                f: _unref(polyline),\n                g: _unref(mapScale),\n                h: _o(handleMapTap),\n                i: _t(_unref(currentMode) === 'draw' ? '绘制模式' : '轨迹模式'),\n                j: _o(toggleMode),\n                k: _unref(currentMode) === 'draw' ? 'primary' : 'default',\n                l: _unref(currentMode) === 'draw'\n            }), _unref(currentMode) === 'draw' ? new UTSJSONObject({\n                m: _o(startDrawing),\n                n: _unref(isDrawing),\n                o: _o(addPoint),\n                p: !_unref(isDrawing),\n                q: _o(finishDrawing),\n                r: !_unref(isDrawing) || _unref(points).length < 3,\n                s: _o(clearAll)\n            }) : new UTSJSONObject({\n                t: _o(startPlayback),\n                v: _unref(isPlaying),\n                w: _o(pausePlayback),\n                x: !_unref(isPlaying),\n                y: _o(clearTrack),\n                z: _unref(playbackSpeed),\n                A: _o(setPlaybackSpeed)\n            }), new UTSJSONObject({\n                B: _unref(currentMode) === 'draw' && _unref(points).length > 0\n            }), _unref(currentMode) === 'draw' && _unref(points).length > 0 ? new UTSJSONObject({\n                C: _t(_unref(points).length),\n                D: _f(_unref(points), (point = null, index = null, i0 = null) => {\n                    return new UTSJSONObject({\n                        a: _t(index + 1),\n                        b: _t(point.latitude.toFixed(6)),\n                        c: _t(point.longitude.toFixed(6)),\n                        d: _o(($event = null) => { return removePoint(index); }, index),\n                        e: index\n                    });\n                })\n            }) : new UTSJSONObject({\n                E: _t(_unref(trackPoints).length),\n                F: _t((_unref(totalDistance) / 1000).toFixed(2)),\n                G: _t(_unref(playbackSpeed))\n            }), new UTSJSONObject({\n                H: _sei(_gei(_ctx, ''), 'view')\n            }));\n            return __returned__;\n        };\n    }\n}));\n//# sourceMappingURL=/Users/xyhc/Documents/carConnectInternet/pages/index/index.uvue?vue&type=script&setup=true&lang.uts.js.map","references":["/Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli-vite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts","/Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli-vite/node_modules/@vue/runtime-core/dist/runtime-core.d.ts","/Users/xyhc/Documents/carConnectInternet/static/libs/amap-wx.130.js"],"uniExtApis":["uni.createSelectorQuery","uni.showToast","uni.__f__"],"map":"{\"version\":3,\"file\":\"index.uvue?vue&type=script&setup=true&lang.uts.js\",\"sourceRoot\":\"\",\"sources\":[\"index.uvue?vue&type=script&setup=true&lang.uts\"],\"names\":[],\"mappings\":\"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\"}"}
