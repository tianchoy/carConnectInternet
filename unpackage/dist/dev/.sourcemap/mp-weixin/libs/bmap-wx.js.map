{"version":3,"file":"bmap-wx.js","sources":["libs/bmap-wx.js"],"sourcesContent":["/**\n * @file 微信小程序JSAPI\n * @author 崔健 cuijian03@baidu.com 2017.01.10\n * @update 邓淑芳 623996689@qq.com 2019.07.03\n */\n\n/**\n * 百度地图微信小程序API类\n *\n * @class\n */\nclass BMapWX {\n\n    /**\n     * 百度地图微信小程序API类\n     *\n     * @constructor\n     */\n    constructor(param) {\n      this.ak = param[\"ak\"];\n    }\n  \n    /**\n     * 使用微信接口进行定位\n     *\n     * @param {string} type 坐标类型\n     * @param {Function} success 成功执行\n     * @param {Function} fail 失败执行\n     * @param {Function} complete 完成后执行\n     */\n    getWXLocation(type, success, fail, complete) {\n      type = type || 'gcj02',\n      success = success || function () { };\n      fail = fail || function () { };\n      complete = complete || function () { };\n      wx.getLocation({\n        type: type,\n        success: success,\n        fail: fail,\n        complete: complete\n      });\n    }\n  \n    /**\n     * POI周边检索\n     *\n     * @param {Object} param 检索配置\n     * 参数对象结构可以参考\n     * http://lbsyun.baidu.com/index.php?title=webapi/guide/webservice-placeapi\n     */\n    search(param) {\n      var that = this;\n      param = param || {};\n      let searchparam = {\n        query: param[\"query\"] || '生活服务$美食&酒店',\n        scope: param[\"scope\"] || 1,\n        filter: param[\"filter\"] || '',\n        coord_type: param[\"coord_type\"] || 2,\n        page_size: param[\"page_size\"] || 10,\n        page_num: param[\"page_num\"] || 0,\n        output: param[\"output\"] || 'json',\n        ak: that.ak,\n        sn: param[\"sn\"] || '',\n        timestamp: param[\"timestamp\"] || '',\n        radius: param[\"radius\"] || 2000,\n        ret_coordtype: 'gcj02ll'\n      };\n      let otherparam = {\n        iconPath: param[\"iconPath\"],\n        iconTapPath: param[\"iconTapPath\"],\n        width: param[\"width\"],\n        height: param[\"height\"],\n        alpha: param[\"alpha\"] || 1,\n        success: param[\"success\"] || function () { },\n        fail: param[\"fail\"] || function () { }\n      };\n      let type = 'gcj02';\n      let locationsuccess = function (result) {\n        searchparam[\"location\"] = result[\"latitude\"] + ',' + result[\"longitude\"];\n        wx.request({\n          url: 'https://api.map.baidu.com/place/v2/search',\n          data: searchparam,\n          header: {\n            \"content-type\": \"application/json\"\n          },\n          method: 'GET',\n          success(data) {\n            let res = data[\"data\"];\n            if (res[\"status\"] === 0) {\n              let poiArr = res[\"results\"];\n              // outputRes 包含两个对象，\n              // originalData为百度接口返回的原始数据\n              // wxMarkerData为小程序规范的marker格式\n              let outputRes = {};\n              outputRes[\"originalData\"] = res;\n              outputRes[\"wxMarkerData\"] = [];\n              for (let i = 0; i < poiArr.length; i++) {\n                outputRes[\"wxMarkerData\"][i] = {\n                  id: i,\n                  latitude: poiArr[i][\"location\"][\"lat\"],\n                  longitude: poiArr[i][\"location\"][\"lng\"],\n                  title: poiArr[i][\"name\"],\n                  iconPath: otherparam[\"iconPath\"],\n                  iconTapPath: otherparam[\"iconTapPath\"],\n                  address: poiArr[i][\"address\"],\n                  telephone: poiArr[i][\"telephone\"],\n                  alpha: otherparam[\"alpha\"],\n                  width: otherparam[\"width\"],\n                  height: otherparam[\"height\"]\n                }\n              }\n              otherparam.success(outputRes);\n            } else {\n              otherparam.fail({\n                errMsg: res[\"message\"],\n                statusCode: res[\"status\"]\n              });\n            }\n          },\n          fail(data) {\n            otherparam.fail(data);\n          }\n        });\n      }\n      let locationfail = function (result) {\n        otherparam.fail(result);\n      };\n      let locationcomplete = function (result) {\n      };\n      if (!param[\"location\"]) {\n        that.getWXLocation(type, locationsuccess, locationfail, locationcomplete);\n      } else {\n        let longitude = param.location.split(',')[1];\n        let latitude = param.location.split(',')[0];\n        let errMsg = 'input location';\n        let res = {\n          errMsg: errMsg,\n          latitude: latitude,\n          longitude: longitude\n        };\n        locationsuccess(res);\n      }\n    }\n  \n    /**\n     * sug模糊检索\n     *\n     * @param {Object} param 检索配置\n     * 参数对象结构可以参考\n     * http://lbsyun.baidu.com/index.php?title=webapi/place-suggestion-api\n     */\n    suggestion(param) {\n      var that = this;\n      param = param || {};\n      let suggestionparam = {\n        query: param[\"query\"] || '',\n        region: param[\"region\"] || '全国',\n        city_limit: param[\"city_limit\"] || false,\n        output: param[\"output\"] || 'json',\n        ak: that.ak,\n        sn: param[\"sn\"] || '',\n        timestamp: param[\"timestamp\"] || '',\n        ret_coordtype: 'gcj02ll'\n      };\n      let otherparam = {\n        success: param[\"success\"] || function () { },\n        fail: param[\"fail\"] || function () { }\n      };\n      wx.request({\n        url: 'https://api.map.baidu.com/place/v2/suggestion',\n        data: suggestionparam,\n        header: {\n          \"content-type\": \"application/json\"\n        },\n        method: 'GET',\n        success(data) {\n          let res = data[\"data\"];\n          if (res[\"status\"] === 0) {\n            otherparam.success(res);\n          } else {\n            otherparam.fail({\n              errMsg: res[\"message\"],\n              statusCode: res[\"status\"]\n            });\n          }\n        },\n        fail(data) {\n          otherparam.fail(data);\n        }\n      });\n    }\n  \n    /**\n     * rgc检索（逆地理编码：经纬度->地点描述）\n     * \n     * @param {Object} param 检索配置\n     * 参数对象结构可以参考\n     * https://lbs.baidu.com/index.php?title=webapi/guide/webservice-geocoding-abroad\n     * \n     */\n    regeocoding (param) {\n      var that = this;\n      param = param || {};\n      let regeocodingparam = {\n        coordtype: param[\"coordtype\"] || 'gcj02ll',         \n        ret_coordtype: 'gcj02ll',                          \n        radius: param[\"radius\"] || 1000,                    \n        ak: that.ak,                                        \n        sn: param[\"sn\"] || '',                              \n        output: param[\"output\"] || 'json',                 \n        callback: param[\"callback\"] || function () { },     \n        extensions_poi: param[\"extensions_poi\"] || 1,      \n        extensions_road: param[\"extensions_road\"] || false, \n        extensions_town: param[\"extensions_town\"] || false, \n        language: param[\"language\"] || 'zh-CN',             \n        language_auto: param[\"language_auto\"] || 0        \n      };\n      let otherparam = {\n        iconPath: param[\"iconPath\"],\n        iconTapPath: param[\"iconTapPath\"],\n        width: param[\"width\"],\n        height: param[\"height\"],\n        alpha: param[\"alpha\"] || 1, \n        success: param[\"success\"] || function () { },\n        fail: param[\"fail\"] || function () { }\n      };\n      let type = 'gcj02';\n      let locationsuccess = function (result) {\n        regeocodingparam[\"location\"] = result[\"latitude\"] + ',' + result[\"longitude\"];\n        wx.request({\n          url: 'https://api.map.baidu.com/reverse_geocoding/v3',\n          data: regeocodingparam,\n          header: {\n            \"content-type\": \"application/json\"\n          },\n          method: 'GET',\n          success(data) {\n            let res = data[\"data\"];\n            if (res[\"status\"] === 0) {\n              let poiObj = res[\"result\"];\n              // outputRes 包含两个对象：\n              // originalData为百度接口返回的原始数据\n              // wxMarkerData为小程序规范的marker格式\n              let outputRes = {};\n              outputRes[\"originalData\"] = res;\n              outputRes[\"wxMarkerData\"] = [];\n              outputRes[\"wxMarkerData\"][0] = {\n                id: 0,\n                latitude: result[\"latitude\"],\n                longitude: result[\"longitude\"],\n                address: poiObj[\"formatted_address\"],\n                iconPath: otherparam[\"iconPath\"],\n                iconTapPath: otherparam[\"iconTapPath\"],\n                desc: poiObj[\"sematic_description\"],\n                business: poiObj[\"business\"],\n                alpha: otherparam[\"alpha\"],\n                width: otherparam[\"width\"],\n                height: otherparam[\"height\"]\n              }\n              otherparam.success(outputRes);\n            } else {\n              otherparam.fail({\n                errMsg: res[\"message\"],\n                statusCode: res[\"status\"]\n              });\n            }\n          },\n          fail(data) {\n            otherparam.fail(data);\n          }\n        });\n      };\n      let locationfail = function (result) {\n        otherparam.fail(result);\n      }\n      let locationcomplete = function (result) {\n      };\n      if (!param[\"location\"]) {\n        that.getWXLocation(type, locationsuccess, locationfail, locationcomplete);\n      } else {\n        let longitude = param.location.split(',')[1];\n        let latitude = param.location.split(',')[0];\n        let errMsg = 'input location';\n        let res = {\n          errMsg: errMsg,\n          latitude: latitude,\n          longitude: longitude\n        };\n        locationsuccess(res);\n      }\n    }\n  \n    /**\n     * gc检索（地理编码：地点->经纬度）\n     *\n     * @param {Object} param 检索配置\n     * 参数对象结构可以参考\n     * https://lbs.baidu.com/index.php?title=webapi/guide/webservice-geocoding\n     * \n     */\n    geocoding(param) {\n      var that = this;\n      param = param || {};\n      let geocodingparam = {\n        address: param[\"address\"] || '',                    \n        city: param[\"city\"] || '',                          \n        ret_coordtype: param[\"coordtype\"] || 'gcj02ll',     \n        ak: that.ak,                                        \n        sn: param[\"sn\"] || '',                              \n        output: param[\"output\"] || 'json',                  \n        callback: param[\"callback\"] || function () { }\n      };\n      let otherparam = {\n        iconPath: param[\"iconPath\"],\n        iconTapPath: param[\"iconTapPath\"],\n        width: param[\"width\"],\n        height: param[\"height\"],\n        alpha: param[\"alpha\"] || 1, \n        success: param[\"success\"] || function () { },\n        fail: param[\"fail\"] || function () { }\n      };\n      if (param[\"address\"]) {\n        wx.request({\n          url: 'https://api.map.baidu.com/geocoding/v3',\n          data: geocodingparam,\n          header: {\n            \"content-type\": \"application/json\"\n          },\n          method: 'GET',\n          success(data) {\n            let res = data[\"data\"];\n            if (res[\"status\"] === 0){\n              let poiObj = res[\"result\"];\n              // outputRes 包含两个对象：\n              // originalData为百度接口返回的原始数据\n              // wxMarkerData为小程序规范的marker格式\n              let outputRes = res;\n              outputRes[\"originalData\"] = res;\n              outputRes[\"wxMarkerData\"] = [];\n              outputRes[\"wxMarkerData\"][0] = {\n                id: 0,\n                latitude: poiObj[\"location\"][\"lat\"],\n                longitude: poiObj[\"location\"][\"lng\"],\n                iconPath: otherparam[\"iconPath\"],\n                iconTapPath: otherparam[\"iconTapPath\"],\n                alpha: otherparam[\"alpha\"],\n                width: otherparam[\"width\"],\n                height: otherparam[\"height\"]\n              }\n              otherparam.success(outputRes);\n            } else {\n              otherparam.fail({\n                errMsg: res[\"message\"],\n                statusCode: res[\"status\"]\n              });\n            }\n          },\n          fail(data) {\n            otherparam.fail(data);\n          }\n        });\n      } else {\n        let errMsg = 'input address!';\n        let res = {\n          errMsg: errMsg\n        };\n        otherparam.fail(res);\n      }\n    } \n  \n    /**\n     * 天气检索\n     *\n     * @param {Object} param 检索配置\n     */\n    weather(param) {\n      var that = this;\n      param = param || {};\n      let weatherparam = {\n        coord_type: param[\"coord_type\"] || 'gcj02',\n        output: param[\"output\"] || 'json',\n        ak: that.ak,\n        sn: param[\"sn\"] || '',\n        timestamp: param[\"timestamp\"] || ''\n      };\n      let otherparam = {\n        success: param[\"success\"] || function () { },\n        fail: param[\"fail\"] || function () { }\n      };\n      let type = 'gcj02';\n      let locationsuccess = function (result) {\n        weatherparam[\"location\"] = result[\"longitude\"] + ',' + result[\"latitude\"];\n        wx.request({\n          url: 'https://api.map.baidu.com/telematics/v3/weather',\n          data: weatherparam,\n          header: {\n            \"content-type\": \"application/json\"\n          },\n          method: 'GET',\n          success(data) {\n            let res = data[\"data\"];\n            if (res[\"error\"] === 0 && res[\"status\"] === 'success') {\n              let weatherArr = res[\"results\"];\n              // outputRes 包含两个对象，\n              // originalData为百度接口返回的原始数据\n              // wxMarkerData为小程序规范的marker格式\n              let outputRes = {};\n              outputRes[\"originalData\"] = res;\n              outputRes[\"currentWeather\"] = [];\n              outputRes[\"currentWeather\"][0] = {\n                currentCity: weatherArr[0][\"currentCity\"],\n                pm25: weatherArr[0][\"pm25\"],\n                date: weatherArr[0][\"weather_data\"][0][\"date\"],\n                temperature: weatherArr[0][\"weather_data\"][0][\"temperature\"],\n                weatherDesc: weatherArr[0][\"weather_data\"][0][\"weather\"],\n                wind: weatherArr[0][\"weather_data\"][0][\"wind\"]\n              };\n              otherparam.success(outputRes);\n            } else {\n              otherparam.fail({\n                errMsg: res[\"message\"],\n                statusCode: res[\"status\"]\n              });\n            }\n          },\n          fail(data) {\n            otherparam.fail(data);\n          }\n        });\n      }\n      let locationfail = function (result) {\n        otherparam.fail(result);\n      }\n      let locationcomplete = function (result) {\n      }\n      if (!param[\"location\"]) {\n        that.getWXLocation(type, locationsuccess, locationfail, locationcomplete);\n      } else {\n        let longitude = param.location.split(',')[0];\n        let latitude = param.location.split(',')[1];\n        let errMsg = 'input location';\n        let res = {\n          errMsg: errMsg,\n          latitude: latitude,\n          longitude: longitude\n        };\n        locationsuccess(res);\n      }\n    }\n  }\n  \n  module.exports.BMapWX = BMapWX;"],"names":["wx"],"mappings":"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"}