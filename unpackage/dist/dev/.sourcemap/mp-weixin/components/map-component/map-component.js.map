{"version":3,"file":"map-component.js","sources":["components/map-component/map-component.uvue","/Users/xyhc/Documents/carConnectInternet/components/map-component/map-component.uvue?type=component"],"sourcesContent":["<template>\n  <view class=\"map-container\">\n    <map id=\"fenceMap\" \n         :latitude=\"center.latitude\" \n         :longitude=\"center.longitude\" \n         :polygons=\"polygons\"\n         :markers=\"markers\" \n         :polyline=\"polyline\" \n         :scale=\"mapScale\" \n         @tap=\"handleMapTap\"\n         style=\"width:100%;height:100%\" \n         show-location></map>\n  </view>\n</template>\n\n<script setup lang=\"uts\">\n  import { ref, reactive, onMounted } from 'vue'\n  \n  // 定义组件props\n  const props = defineProps({\n    mode: {\n      type: String as () => 'draw' | 'track',\n      default: 'draw'\n    },\n    initialCenter: {\n      type: Object as () => { latitude: number, longitude: number },\n      default: () => ({ latitude: 39.90469, longitude: 116.40717 })\n    },\n    initialScale: {\n      type: Number,\n      default: 13\n    }\n  })\n\n  // 定义组件事件\n  const emit = defineEmits([\n    'map-tap',\n    'draw-start',\n    'draw-finish',\n    'point-added',\n    'point-removed',\n    'polygon-created',\n    'playback-start',\n    'playback-pause',\n    'playback-end'\n  ])\n\n  // 地图状态\n  const center = reactive(props.initialCenter)\n  const mapScale = ref(props.initialScale)\n  const currentMode = ref(props.mode)\n\n  // 电子围栏相关\n  const isDrawing = ref(false)\n  const points = ref<Array<{ latitude: number, longitude: number }>>([])\n  const polygons = ref<Array<any>>([])\n\n  // 轨迹回放相关\n  const trackPoints = ref<Array<{ latitude: number, longitude: number, timestamp: number }>>([])\n  const polyline = ref<Array<any>>([])\n  const isPlaying = ref(false)\n  const playbackSpeed = ref(1)\n  const totalDistance = ref(0)\n  const playbackInterval = ref<number | null>(null)\n  const currentIndex = ref(0)\n  const carMarker = ref<any>(null)\n\n  // 标记点集合\n  const markers = ref<Array<any>>([])\n\n  // 暴露给父组件的方法\n  defineExpose({\n    setMode,\n    startDrawing,\n    finishDrawing,\n    clearDrawing,\n    addPoint,\n    removePoint,\n    loadTrack,\n    startPlayback,\n    pausePlayback,\n    resetPlayback,\n    clearTrack,\n    setPlaybackSpeed,\n    getCurrentCenter,\n    getDrawingPoints,\n    getTrackPoints,\n    getCurrentPolygon,\n    getCurrentPolyline,\n    getTotalDistance: () => totalDistance.value,\n    adjustMapToFitTrack,\n    adjustMapToFitPolygon\n  })\n\n  // 初始化方法\n  onMounted(() => {\n    if (currentMode.value === 'track') {\n      initCarMarker()\n    }\n  })\n\n  /* 公共方法 */\n  const setMode = (mode: 'draw' | 'track') => {\n    currentMode.value = mode\n    if (mode === 'track') {\n      initCarMarker()\n      resetPlayback()\n      adjustMapToFitTrack()\n    } else {\n      updateMapDisplay()\n    }\n  }\n\n  const getCurrentCenter = () => {\n    return { ...center }\n  }\n\n  const getDrawingPoints = () => {\n    return [...points.value]\n  }\n\n  const getTrackPoints = () => {\n    return [...trackPoints.value]\n  }\n\n  const getCurrentPolygon = () => {\n    return polygons.value.length > 0 ? [...polygons.value[0].points] : []\n  }\n\n  const getCurrentPolyline = () => {\n    return polyline.value.length > 0 ? [...polyline.value[0].points] : []\n  }\n\n  /* 地图操作方法 */\n  const handleMapTap = (e: any) => {\n    emit('map-tap', e.detail)\n    if (!isDrawing.value || currentMode.value !== 'draw') return\n    addNewPoint(e.detail.latitude, e.detail.longitude)\n  }\n\n  const updateMapDisplay = () => {\n    const newMarkers = []\n\n    // 添加围栏顶点标记\n    if (currentMode.value === 'draw') {\n      newMarkers.push(...points.value.map((point, index) => ({\n        id: index + 1,\n        latitude: point.latitude,\n        longitude: point.longitude,\n        iconPath: '/static/marker.png',\n        width: 20,\n        height: 20,\n        callout: { content: `顶点${index + 1}`, display: 'ALWAYS' }\n      })))\n    }\n\n    // 添加车辆标记\n    if (carMarker.value) {\n      newMarkers.push(carMarker.value)\n    }\n\n    markers.value = newMarkers\n\n    // 更新围栏多边形\n    if (currentMode.value === 'draw' && points.value.length >= 3) {\n      polygons.value = [{\n        points: points.value,\n        strokeWidth: 2,\n        strokeColor: '#FF0000',\n        fillColor: 'rgba(255,0,0,0.2)',\n        zIndex: 1\n      }]\n    } else {\n      polygons.value = []\n    }\n\n    // 更新轨迹线\n    if (currentMode.value === 'track') {\n      updatePolyline()\n    }\n  }\n\n  /* 电子围栏相关方法 */\n  const startDrawing = () => {\n    isDrawing.value = true\n    points.value = []\n    updateMapDisplay()\n    emit('draw-start')\n  }\n\n  const addPoint = () => {\n    uni.createSelectorQuery()\n      .select('#fenceMap')\n      .context((res: any) => {\n        const mapContext = res.context\n        mapContext.getCenterLocation({\n          success: (centerRes: any) => {\n            addNewPoint(centerRes.latitude, centerRes.longitude)\n          }\n        })\n      })\n      .exec()\n  }\n\n  const addNewPoint = (lat: number, lng: number) => {\n    points.value.push({ latitude: lat, longitude: lng })\n    updateMapDisplay()\n    emit('point-added', { latitude: lat, longitude: lng, index: points.value.length - 1 })\n  }\n\n  const removePoint = (index: number) => {\n    const removed = points.value.splice(index, 1)[0]\n    updateMapDisplay()\n    emit('point-removed', { point: removed, index })\n  }\n\n  const finishDrawing = () => {\n    if (points.value.length < 3) {\n      uni.showToast({ title: '至少需要3个顶点', icon: 'none' })\n      return\n    }\n    isDrawing.value = false\n    emit('draw-finish', [...points.value])\n    emit('polygon-created', [...points.value])\n  }\n\n  const clearDrawing = () => {\n    isDrawing.value = false\n    points.value = []\n    polygons.value = []\n    updateMapDisplay()\n  }\n\n  const adjustMapToFitPolygon = () => {\n    if (points.value.length === 0) return\n\n    const bounds = calculateBounds(points.value)\n    center.latitude = (bounds.minLat + bounds.maxLat) / 2\n    center.longitude = (bounds.minLng + bounds.maxLng) / 2\n    adjustZoomLevel(bounds)\n  }\n\n  /* 轨迹回放相关方法 */\n  const loadTrack = (trackData: Array<{ latitude: number, longitude: number, timestamp?: number }>) => {\n    trackPoints.value = trackData.map(p => ({\n      latitude: p.latitude,\n      longitude: p.longitude,\n      timestamp: p.timestamp || Date.now()\n    }))\n    calculateTrackDistance()\n    updatePolyline()\n    initCarMarker()\n  }\n\n  const initCarMarker = () => {\n    if (trackPoints.value.length > 0) {\n      carMarker.value = {\n        id: 999,\n        latitude: trackPoints.value[0].latitude,\n        longitude: trackPoints.value[0].longitude,\n        iconPath: '/static/car.png',\n        width: 32,\n        height: 32,\n        anchor: { x: 0.5, y: 0.5 }\n      }\n      markers.value = [carMarker.value]\n    }\n  }\n\n  const calculateTrackDistance = () => {\n    totalDistance.value = 0\n    for (let i = 1; i < trackPoints.value.length; i++) {\n      totalDistance.value += getDistance(\n        trackPoints.value[i - 1].latitude,\n        trackPoints.value[i - 1].longitude,\n        trackPoints.value[i].latitude,\n        trackPoints.value[i].longitude\n      )\n    }\n  }\n\n  const getDistance = (lat1: number, lng1: number, lat2: number, lng2: number) => {\n    const rad = (d: number) => d * Math.PI / 180.0\n    const radLat1 = rad(lat1)\n    const radLat2 = rad(lat2)\n    const a = radLat1 - radLat2\n    const b = rad(lng1) - rad(lng2)\n    const s = 2 * Math.asin(Math.sqrt(Math.pow(Math.sin(a / 2), 2) +\n      Math.cos(radLat1) * Math.cos(radLat2) * Math.pow(Math.sin(b / 2), 2)))\n    return s * 6378.137 * 1000\n  }\n\n  const startPlayback = () => {\n    if (trackPoints.value.length === 0) {\n      uni.showToast({ title: '没有轨迹数据', icon: 'none' })\n      return\n    }\n\n    isPlaying.value = true\n    currentIndex.value = 0\n    initCarMarker()\n    emit('playback-start')\n\n    playbackInterval.value = setInterval(playNextPoint, 1000 / playbackSpeed.value)\n  }\n\n  const playNextPoint = () => {\n    if (currentIndex.value >= trackPoints.value.length - 1) {\n      pausePlayback()\n      emit('playback-end')\n      return\n    }\n\n    currentIndex.value++\n    const point = trackPoints.value[currentIndex.value]\n\n    if (carMarker.value) {\n      carMarker.value.latitude = point.latitude\n      carMarker.value.longitude = point.longitude\n      markers.value = [carMarker.value]\n    }\n  }\n\n  const pausePlayback = () => {\n    isPlaying.value = false\n    if (playbackInterval.value) {\n      clearInterval(playbackInterval.value)\n      playbackInterval.value = null\n    }\n    emit('playback-pause')\n  }\n\n  const resetPlayback = () => {\n    pausePlayback()\n    currentIndex.value = 0\n    updatePolyline()\n\n    if (trackPoints.value.length > 0) {\n      initCarMarker()\n      if (carMarker.value) {\n        carMarker.value.latitude = trackPoints.value[0].latitude\n        carMarker.value.longitude = trackPoints.value[0].longitude\n        markers.value = [carMarker.value]\n      }\n    }\n  }\n\n  const clearTrack = () => {\n    pausePlayback()\n    trackPoints.value = []\n    polyline.value = []\n    totalDistance.value = 0\n    carMarker.value = null\n    markers.value = []\n  }\n\n  const setPlaybackSpeed = (speed: number) => {\n    playbackSpeed.value = speed\n    if (isPlaying.value) {\n      pausePlayback()\n      startPlayback()\n    }\n  }\n\n  const updatePolyline = () => {\n    if (!trackPoints.value || trackPoints.value.length === 0) {\n      polyline.value = []\n      return\n    }\n\n    polyline.value = [{\n      points: trackPoints.value.map(p => ({ latitude: p.latitude, longitude: p.longitude })),\n      color: '#1890FF',\n      width: 4,\n      arrowLine: true,\n      borderColor: '#FFF',\n      borderWidth: 2\n    }]\n  }\n\n  const adjustMapToFitTrack = () => {\n    if (trackPoints.value.length === 0) return\n\n    const bounds = calculateBounds(trackPoints.value)\n    center.latitude = (bounds.minLat + bounds.maxLat) / 2\n    center.longitude = (bounds.minLng + bounds.maxLng) / 2\n    adjustZoomLevel(bounds)\n  }\n\n  /* 辅助方法 */\n  const calculateBounds = (points: Array<{ latitude: number, longitude: number }>) => {\n    let minLat = points[0].latitude\n    let maxLat = points[0].latitude\n    let minLng = points[0].longitude\n    let maxLng = points[0].longitude\n\n    points.forEach(point => {\n      minLat = Math.min(minLat, point.latitude)\n      maxLat = Math.max(maxLat, point.latitude)\n      minLng = Math.min(minLng, point.longitude)\n      maxLng = Math.max(maxLng, point.longitude)\n    })\n\n    return { minLat, maxLat, minLng, maxLng }\n  }\n\n  const adjustZoomLevel = (bounds: { minLat: number, maxLat: number, minLng: number, maxLng: number }) => {\n    const latDiff = bounds.maxLat - bounds.minLat\n    const lngDiff = bounds.maxLng - bounds.minLng\n    const maxDiff = Math.max(latDiff, lngDiff)\n\n    if (maxDiff > 0.1) mapScale.value = 11\n    else if (maxDiff > 0.05) mapScale.value = 12\n    else if (maxDiff > 0.02) mapScale.value = 13\n    else mapScale.value = 14\n  }\n</script>\n\n<style lang=\"scss\">\n  .map-container {\n    width: 100%;\n    height: 100%;\n    \n    map {\n      width: 100%;\n      height: 100%;\n    }\n  }\n</style>","import Component from '/Users/xyhc/Documents/carConnectInternet/components/map-component/map-component.uvue'\nwx.createComponent(Component)"],"names":["reactive","ref","onMounted","uni","points","Component"],"mappings":"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"}