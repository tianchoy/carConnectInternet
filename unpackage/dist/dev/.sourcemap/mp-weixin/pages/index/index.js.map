{"version":3,"file":"index.js","sources":["pages/index/index.uvue","pages/index/index.uvue?type=page"],"sourcesContent":["<template>\n\t<view class=\"container\">\n\t\t<!-- 地图组件 -->\n\t\t<view class=\"map-container\" v-if=\"showMap\">\n\t\t\t<MapComponent :center=\"center\" :mapScale=\"mapScale\" :polygons=\"polygons\" :markers=\"markers\"\n\t\t\t\t:polyline=\"polyline\" :isDrawing=\"isDrawing\" :currentMode=\"currentMode\" @map-tap=\"handleMapTap\" />\n\t\t</view>\n\t\t<view class=\"indexListMode\" v-else>\n\t\t\t<indexListMode />\n\t\t</view>\n\t\t\n\t\t<view class=\"tools-panel\">\n\t\t\t<uv-button @click=\"getlocation()\">\n\t\t\t\t<image src=\"/static/icon/location.png\" class=\"icon\" />\n\t\t\t</uv-button>\n\t\t\t<uv-button @click=\"toggleMapMode\">\n\t\t\t\t<image :src=\"showMap ? '/static/list.png' : '/static/map.png'\" class=\"icon\" />\n\t\t\t</uv-button>\n\t\t\t<uv-button\n\t\t\t\t:class=\"['mode-btn', currentMode === 'draw' ? 'active' : '']\" \n\t\t\t\t@click=\"toggleMode('draw')\"\n\t\t\t>\n\t\t\t\t绘制模式\n\t\t\t</uv-button>\n\t\t\t<uv-button \n\t\t\t\t:class=\"['mode-btn', currentMode === 'track' ? 'active' : '']\" \n\t\t\t\t@click=\"toggleMode('track')\"\n\t\t\t>\n\t\t\t\t轨迹模式\n\t\t\t</uv-button>\n\t\t\t<template v-if=\"currentMode === 'draw'\">\n\t\t\t\t<uv-button @click=\"startDrawing\" :disabled=\"isDrawing\">\n\t\t\t\t\t开始绘制\n\t\t\t\t</uv-button>\n\t\t\t\t<uv-button @click=\"addPoint\" :disabled=\"!isDrawing\">\n\t\t\t\t\t添加当前点\n\t\t\t\t</uv-button>\n\t\t\t\t<uv-button @click=\"finishDrawing\" :disabled=\"!isDrawing || points.length < 3\">\n\t\t\t\t\t完成绘制\n\t\t\t\t</uv-button>\n\t\t\t\t<uv-button @click=\"clearAll\">\n\t\t\t\t\t重置\n\t\t\t\t</uv-button>\n\t\t\t</template>\n\t\t\t\n\t\t\t<template v-else>\n\t\t\t\t<uv-button @click=\"startPlayback\" :disabled=\"isPlaying\">\n\t\t\t\t\t开始回放\n\t\t\t\t</uv-button>\n\t\t\t\t<uv-button @click=\"pausePlayback\" :disabled=\"!isPlaying\">\n\t\t\t\t\t暂停\n\t\t\t\t</uv-button>\n\t\t\t\t<uv-button @click=\"clearTrack\">\n\t\t\t\t\t清除轨迹\n\t\t\t\t</uv-button>\n\t\t\t\t<view class=\"speed-control\">\n\t\t\t\t\t<text class=\"speed-label\">回放速度: {{playbackSpeed}}x</text>\n\t\t\t\t\t<slider :value=\"playbackSpeed\" min=\"1\" max=\"5\" @change=\"setPlaybackSpeed\" show-value />\n\t\t\t\t</view>\n\t\t\t</template>\n\t\t</view>\n\t\t<!-- 坐标点列表/轨迹信息 -->\n\t\t<view class=\"info-panel\">\n\t\t\t<view v-if=\"currentMode === 'draw' && points.length > 0\">\n\t\t\t\t<view class=\"section-title\">\n\t\t\t\t\t围栏顶点 ({{points.length}}个)\n\t\t\t\t</view>\n\t\t\t\t<scroll-view scroll-y class=\"scroll-container\">\n\t\t\t\t\t<view class=\"point-item\" v-for=\"(point, index) in points\" :key=\"index\">\n\t\t\t\t\t\t<text class=\"point-info\">顶点{{index + 1}}: {{point.latitude.toFixed(6)}}, {{point.longitude.toFixed(6)}}</text>\n\t\t\t\t\t\t<uv-button @click=\"removePoint(index)\" class=\"remove-btn\" text=\"删除\"></uv-button>\n\t\t\t\t\t</view>\n\t\t\t\t</scroll-view>\n\t\t\t</view>\n\n\t\t\t<view v-else class=\"track-info\">\n\t\t\t\t<view class=\"section-title\">\n\t\t\t\t\t轨迹信息\n\t\t\t\t</view>\n\t\t\t\t<view class=\"info-item\">\n\t\t\t\t\t<text>总点数: {{trackPoints.length}}</text>\n\t\t\t\t</view>\n\t\t\t\t<view class=\"info-item\">\n\t\t\t\t\t<text>行驶距离: {{(totalDistance/1000).toFixed(2)}} km</text>\n\t\t\t\t</view>\n\t\t\t\t<view class=\"info-item\">\n\t\t\t\t\t<text>回放速度: {{playbackSpeed}}x</text>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t\t\n\t\t\t<!-- 车辆状态检测 -->\n\t\t\t<view class=\"status-section\">\n\t\t\t\t<view class=\"section-title\">\n\t\t\t\t\t<image src=\"/static/car.png\" class=\"section-icon\" />\n\t\t\t\t\t车辆状态\n\t\t\t\t</view>\n\t\t\t\t<view class=\"status-display\" :class=\"carInFence ? 'in-fence' : 'out-fence'\">\n\t\t\t\t\t<text>{{ carInFence ? '车辆在围栏内' : '车辆在围栏外' }}</text>\n\t\t\t\t\t<view class=\"status-indicator\" :class=\"carInFence ? 'in' : 'out'\"></view>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t</view>\n\t</view>\n</template>\n\n<script setup lang=\"uts\">\n\timport { getUserInfo } from '../../api/request.uts'\n\n\t// 地图状态\n\tconst center = reactive({\n\t\tlatitude: 39.90469,\n\t\tlongitude: 116.40717\n\t})\n\tconst mapScale = ref(13)\n\tconst currentMode = ref<'draw' | 'track'>('draw')\n\tconst showMap = ref(true)\n\tconst carInFence = ref(false) // 车辆是否在围栏内\n\n\t// 电子围栏相关\n\tconst isDrawing = ref(false)\n\tconst points = ref<Array<{ latitude : number, longitude : number }>>([])\n\tconst polygons = ref<Array<any>>([])\n\n\t// 轨迹回放相关\n\tconst trackPoints = ref<Array<{ latitude : number, longitude : number, timestamp : number }>>([])\n\tconst polyline = ref<Array<any>>([])\n\tconst isPlaying = ref(false)\n\tconst playbackSpeed = ref(1) //轨迹回放速度\n\tconst totalDistance = ref(0)\n\tconst playbackInterval = ref<number | null>(null)\n\tconst currentIndex = ref(0)\n\tconst carMarker = ref<any>(null)\n\tconst address = ref('')\n\tconst gdKey = '7609efb7050c60178c2670401e2ff0b0'\n\n\t// 标记点集合\n\tconst markers = ref<Array<any>>([])\n\n\t// 检测车辆是否在电子围栏内（射线法）\n\tconst checkCarInFence = (point: { latitude: number, longitude: number }) => {\n\t\tif (polygons.value.length === 0 || polygons.value[0].points.length < 3) {\n\t\t\tcarInFence.value = false\n\t\t\treturn\n\t\t}\n\t\t\n\t\tconst polygon = polygons.value[0].points\n\t\tconst x = point.longitude\n\t\tconst y = point.latitude\n\t\t\n\t\tlet inside = false\n\t\tfor (let i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {\n\t\t\tconst xi = polygon[i].longitude\n\t\t\tconst yi = polygon[i].latitude\n\t\t\tconst xj = polygon[j].longitude\n\t\t\tconst yj = polygon[j].latitude\n\t\t\t\n\t\t\tconst intersect = ((yi > y) !== (yj > y)) &&\n\t\t\t\t(x < (xj - xi) * (y - yi) / (yj - yi) + xi)\n\t\t\t\n\t\t\tif (intersect) inside = !inside\n\t\t}\n\t\t\n\t\tcarInFence.value = inside\n\t\tuni.__f__('log','at pages/index/index.uvue:164',`车辆位置: ${point.latitude.toFixed(6)}, ${point.longitude.toFixed(6)} - ${inside ? '在围栏内' : '在围栏外'}`)\n\t}\n\n\t// 初始化加载测试的电子围栏\n\tonMounted(() => {\n\t\tgetlocation()\n\t\tloadSampleTrack()\n\t\tpolygons.value = [{\n\t\t\tpoints: [{ \"latitude\": 35.26677197770503, \"longitude\": 115.40126244387386 },\n\t\t\t{ \"latitude\": 35.23764782824115, \"longitude\": 115.39397562325496 },\n\t\t\t{ \"latitude\": 35.23905101311781, \"longitude\": 115.44459367195407 },\n\t\t\t{ \"latitude\": 35.270452534471225, \"longitude\": 115.44611973480175 }],\n\t\t\tstrokeWidth: 2,\n\t\t\tstrokeColor: '#FF0000',\n\t\t\tfillColor: 'rgba(255,0,0,0.2)',\n\t\t\tzIndex: 1\n\t\t}]\n\t\t\n\t\t// 初始检测\n\t\tcheckCarInFence(center)\n\t})\n\n\t//获取当前位置\n\tconst getlocation = () => {\n\t\tuni.getLocation({\n\t\t\tsuccess: (res) => {\n\t\t\t\tuni.__f__('log','at pages/index/index.uvue:190','当前坐标点：', res);\n\t\t\t\tcenter.latitude = res.latitude\n\t\t\t\tcenter.longitude = res.longitude\n\t\t\t\tgetAddress(res.latitude, res.longitude)\n\t\t\t\t\n\t\t\t\t// 检测车辆位置\n\t\t\t\tcheckCarInFence({latitude: res.latitude, longitude: res.longitude})\n\t\t\t}\n\t\t})\n\t}\n\n\tconst getAddress = (lat: number, lng: number) => {\n\t\tuni.__f__('log','at pages/index/index.uvue:202',lat, lng)\n\t\tuni.request({\n\t\t\turl: `https://restapi.amap.com/v3/geocode/regeo?parameters&location=${lng},${lat}&key=${gdKey}&radius=10&extensions=all`,\n\t\t\tsuccess: (res) => {\n\t\t\t\tuni.__f__('log','at pages/index/index.uvue:206','获取地址信息:', res.data.regeocode)\n\t\t\t\tif (res.data.status === '1') {\n\t\t\t\t\taddress.value = res.data.regeocode.formatted_address\n\t\t\t\t\tuni.__f__('log','at pages/index/index.uvue:209','地址信息:', address.value)\n\t\t\t\t\tuni.showToast({ title: address.value, icon: 'none', duration: 2000 })\n\t\t\t\t} else {\n\t\t\t\t\tuni.showToast({ title: '获取地址失败', icon: 'none' })\n\t\t\t\t}\n\t\t\t},\n\t\t})\n\t}\n\n\t// 切换地图/列表视图\n\tconst toggleMapMode = () => {\n\t\tshowMap.value = !showMap.value\n\t}\n\n\t// 切换模式\n\tconst toggleMode = (mode: 'draw' | 'track') => {\n\t\tcurrentMode.value = mode\n\t\tif (mode === 'track') {\n\t\t\tinitCarMarker()\n\t\t\tresetPlayback()\n\t\t\tadjustMapToFitTrack()\n\t\t}\n\t}\n\n\t/* 电子围栏功能部分 */\n\tconst startDrawing = () => {\n\t\tisDrawing.value = true\n\t\tpoints.value = []\n\t\tupdateMapDisplay()\n\t}\n\n\tconst handleMapTap = (point : { latitude : number, longitude : number }) => {\n\t\tif (!isDrawing.value || currentMode.value !== 'draw') return\n\t\taddNewPoint(point.latitude, point.longitude)\n\t}\n\n\tconst addPoint = () => {\n\t\taddNewPoint(center.latitude, center.longitude)\n\t}\n\n\tconst addNewPoint = (lat : number, lng : number) => {\n\t\tpoints.value.push({ latitude: lat, longitude: lng })\n\t\tupdateMapDisplay()\n\t}\n\n\tconst removePoint = (index : number) => {\n\t\tpoints.value.splice(index, 1)\n\t\tupdateMapDisplay()\n\t}\n\n\tconst finishDrawing = () => {\n\t\tif (points.value.length < 3) {\n\t\t\tuni.showToast({ title: '至少需要3个顶点', icon: 'none' })\n\t\t\treturn\n\t\t}\n\t\tisDrawing.value = false\n\t\tuni.showToast({ title: `围栏创建成功，共${points.value.length}个顶点` })\n\t\tuni.__f__('log','at pages/index/index.uvue:266','电子围栏坐标:', JSON.stringify(points.value))\n\t\t\n\t\t// 更新多边形\n\t\tpolygons.value = [{\n\t\t\tpoints: points.value,\n\t\t\tstrokeWidth: 2,\n\t\t\tstrokeColor: '#FF0000',\n\t\t\tfillColor: 'rgba(255,0,0,0.2)',\n\t\t\tzIndex: 1\n\t\t}]\n\t\t\n\t\t// 检测车辆位置\n\t\tcheckCarInFence(center)\n\t}\n\n\tconst clearAll = () => {\n\t\tisDrawing.value = false\n\t\tpoints.value = []\n\t\tpolygons.value = []\n\t\tcarInFence.value = false\n\t\tupdateMapDisplay()\n\t}\n\n\t/* 轨迹回放功能部分 */\n\tconst loadSampleTrack = () => {\n\t\t// 模拟测试轨迹数据，正式版用接口的数据把它替换下来\n\t\tconst mockTrack = [{ \"latitude\": 35.26677197770503, \"longitude\": 115.40126244387386 },\n\t\t{ \"latitude\": 35.23764782824115, \"longitude\": 115.39397562325496 },\n\t\t{ \"latitude\": 35.23905101311781, \"longitude\": 115.44459367195407 },\n\t\t{ \"latitude\": 35.270452534471225, \"longitude\": 115.44611973480175 },\n\t\t{ \"latitude\": 35.26677197770503, \"longitude\": 115.40126244387386 }]\n\n\n\t\ttrackPoints.value = mockTrack\n\t\tcalculateTrackDistance()\n\t\tupdatePolyline()\n\t}\n\n\t// 初始化小车标记\n\tconst initCarMarker = () => {\n\t\tif (trackPoints.value.length > 0 && !carMarker.value) {\n\t\t\tcarMarker.value = {\n\t\t\t\tid: 999,\n\t\t\t\tlatitude: trackPoints.value[0].latitude,\n\t\t\t\tlongitude: trackPoints.value[0].longitude,\n\t\t\t\ticonPath: '/static/car.png',\n\t\t\t\twidth: 32,\n\t\t\t\theight: 32,\n\t\t\t\tanchor: { x: 0.5, y: 0.5 }\n\t\t\t}\n\t\t\tmarkers.value = [carMarker.value]\n\t\t}\n\t}\n\n\t// 调整地图视野以适应轨迹\n\tconst adjustMapToFitTrack = () => {\n\t\tif (trackPoints.value.length === 0) return\n\n\t\tconst bounds = calculateTrackBounds()\n\t\tcenter.latitude = (bounds.minLat + bounds.maxLat) / 2\n\t\tcenter.longitude = (bounds.minLng + bounds.maxLng) / 2\n\n\t\t// 根据轨迹范围自动计算缩放级别\n\t\tconst latDiff = bounds.maxLat - bounds.minLat\n\t\tconst lngDiff = bounds.maxLng - bounds.minLng\n\t\tconst maxDiff = Math.max(latDiff, lngDiff)\n\n\t\tif (maxDiff > 0.1) mapScale.value = 11\n\t\telse if (maxDiff > 0.05) mapScale.value = 12\n\t\telse if (maxDiff > 0.02) mapScale.value = 13\n\t\telse mapScale.value = 14\n\t}\n\n\t// 计算轨迹边界\n\tconst calculateTrackBounds = () => {\n\t\tlet minLat = trackPoints.value[0].latitude\n\t\tlet maxLat = trackPoints.value[0].latitude\n\t\tlet minLng = trackPoints.value[0].longitude\n\t\tlet maxLng = trackPoints.value[0].longitude\n\n\t\ttrackPoints.value.forEach(point => {\n\t\t\tminLat = Math.min(minLat, point.latitude)\n\t\t\tmaxLat = Math.max(maxLat, point.latitude)\n\t\t\tminLng = Math.min(minLng, point.longitude)\n\t\t\tmaxLng = Math.max(maxLng, point.longitude)\n\t\t})\n\n\t\treturn { minLat, maxLat, minLng, maxLng }\n\t}\n\n\tconst calculateTrackDistance = () => {\n\t\ttotalDistance.value = 0\n\t\tfor (let i = 1; i < trackPoints.value.length; i++) {\n\t\t\ttotalDistance.value += getDistance(\n\t\t\t\ttrackPoints.value[i - 1].latitude,\n\t\t\t\ttrackPoints.value[i - 1].longitude,\n\t\t\t\ttrackPoints.value[i].latitude,\n\t\t\t\ttrackPoints.value[i].longitude\n\t\t\t)\n\t\t}\n\t}\n\n\t// 计算两点间距离（米）\n\tconst getDistance = (lat1 : number, lng1 : number, lat2 : number, lng2 : number) => {\n\t\tconst rad = (d : number) => d * Math.PI / 180.0\n\t\tconst radLat1 = rad(lat1)\n\t\tconst radLat2 = rad(lat2)\n\t\tconst a = radLat1 - radLat2\n\t\tconst b = rad(lng1) - rad(lng2)\n\t\tconst s = 2 * Math.asin(Math.sqrt(Math.pow(Math.sin(a / 2), 2) +\n\t\t\tMath.cos(radLat1) * Math.cos(radLat2) * Math.pow(Math.sin(b / 2), 2)))\n\t\treturn s * 6378.137 * 1000\n\t}\n\n\tconst startPlayback = () => {\n\t\tif (trackPoints.value.length === 0) {\n\t\t\tuni.showToast({ title: '没有轨迹数据', icon: 'none' })\n\t\t\treturn\n\t\t}\n\n\t\tisPlaying.value = true\n\t\tcurrentIndex.value = 0\n\t\tinitCarMarker()\n\n\t\t// 开始播放\n\t\tplaybackInterval.value = setInterval(playNextPoint, 1000 / playbackSpeed.value)\n\t}\n\n\tconst playNextPoint = () => {\n\t\tif (currentIndex.value >= trackPoints.value.length - 1) {\n\t\t\tpausePlayback()\n\t\t\treturn\n\t\t}\n\n\t\tcurrentIndex.value++\n\t\tconst point = trackPoints.value[currentIndex.value]\n\n\t\t// 更新小车位置\n\t\tif (carMarker.value) {\n\t\t\tcarMarker.value.latitude = point.latitude\n\t\t\tcarMarker.value.longitude = point.longitude\n\t\t\tmarkers.value = [carMarker.value]\n\t\t}\n\t\t\n\t\t// 检测车辆位置\n\t\tcheckCarInFence(point)\n\t}\n\n\tconst pausePlayback = () => {\n\t\tisPlaying.value = false\n\t\tif (playbackInterval.value) {\n\t\t\tclearInterval(playbackInterval.value)\n\t\t\tplaybackInterval.value = null\n\t\t}\n\t}\n\n\t// 重置回放\n\tconst resetPlayback = () => {\n\t\tpausePlayback()\n\t\tcurrentIndex.value = 0\n\t\tupdatePolyline()\n\n\t\t// 重置小车位置\n\t\tif (trackPoints.value.length > 0) {\n\t\t\tinitCarMarker()\n\t\t\tif (carMarker.value) {\n\t\t\t\tcarMarker.value.latitude = trackPoints.value[0].latitude\n\t\t\t\tcarMarker.value.longitude = trackPoints.value[0].longitude\n\t\t\t\tmarkers.value = [carMarker.value]\n\t\t\t}\n\t\t\t\n\t\t\t// 检测车辆位置\n\t\t\tcheckCarInFence(trackPoints.value[0])\n\t\t}\n\t}\n\n\tconst clearTrack = () => {\n\t\tpausePlayback()\n\t\ttrackPoints.value = []\n\t\tpolyline.value = []\n\t\ttotalDistance.value = 0\n\t\tcarMarker.value = null\n\t\tmarkers.value = []\n\t\tcarInFence.value = false\n\t}\n\n\tconst setPlaybackSpeed = (e : any) => {\n\t\tplaybackSpeed.value = e.detail.value\n\t\tif (isPlaying.value) {\n\t\t\tpausePlayback()\n\t\t\tstartPlayback()\n\t\t}\n\t}\n\n\tconst updatePolyline = () => {\n\t\tif (!trackPoints.value || trackPoints.value.length === 0) {\n\t\t\tpolyline.value = []\n\t\t\treturn\n\t\t}\n\n\t\tpolyline.value = [{\n\t\t\tpoints: trackPoints.value.map(p => ({ latitude: p.latitude, longitude: p.longitude })),\n\t\t\tcolor: '#1890FF',\n\t\t\twidth: 4,\n\t\t\tarrowLine: true,\n\t\t\tborderColor: '#FFF',\n\t\t\tborderWidth: 2\n\t\t}]\n\t}\n\n\t/* 通用地图更新方法 */\n\tconst updateMapDisplay = () => {\n\t\t// 更新标记点\n\t\tconst newMarkers = []\n\n\t\t// 添加围栏顶点标记\n\t\tif (currentMode.value === 'draw') {\n\t\t\tnewMarkers.push(...points.value.map((point, index) => ({\n\t\t\t\tid: index + 1,\n\t\t\t\tlatitude: point.latitude,\n\t\t\t\tlongitude: point.longitude,\n\t\t\t\ticonPath: '/static/marker.png',\n\t\t\t\twidth: 20,\n\t\t\t\theight: 20,\n\t\t\t\tcallout: { content: `顶点${index + 1}`, display: 'ALWAYS' }\n\t\t\t})))\n\t\t}\n\n\t\t// 添加车辆标记\n\t\tif (carMarker.value) {\n\t\t\tnewMarkers.push(carMarker.value)\n\t\t}\n\n\t\tmarkers.value = newMarkers\n\n\t\t// 更新围栏多边形\n\t\tif (currentMode.value === 'draw' && points.value.length >= 3) {\n\t\t\tpolygons.value = [{\n\t\t\t\tpoints: points.value,\n\t\t\t\tstrokeWidth: 2,\n\t\t\t\tstrokeColor: '#FF0000',\n\t\t\t\tfillColor: 'rgba(255,0,0,0.2)',\n\t\t\t\tzIndex: 1\n\t\t\t}]\n\t\t} else {\n\t\t\tpolygons.value = []\n\t\t}\n\n\t\t// 更新轨迹线\n\t\tif (currentMode.value === 'track') {\n\t\t\tupdatePolyline()\n\t\t}\n\t}\n</script>\n\n<style lang=\"scss\">\n\t.container {\n\t\tposition: relative;\n\t\twidth: 100%;\n\t\theight: 100vh;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tbackground-color: #f5f7fa;\n\n\t\t.map-container {\n\t\t\tflex: 1;\n\t\t\twidth: 100%;\n\t\t}\n\n\t\t.tools-panel {\n\t\t\tposition: absolute;\n\t\t\ttop: 20rpx;\n\t\t\tright: 20rpx;\n\t\t\tz-index: 10;\n\t\t\tdisplay: flex;\n\t\t\tflex-direction: column;\n\t\t\tgap: 15rpx;\n\t\t\t\n\t\t\tbutton {\n\t\t\t\tpadding: 12rpx 24rpx;\n\t\t\t\tborder-radius: 50rpx;\n\t\t\t\tbackground-color: rgba(255, 255, 255, 0.9);\n\t\t\t\tbox-shadow: 0 4rpx 12rpx rgba(0, 0, 0, 0.15);\n\t\t\t\tfont-size: 26rpx;\n\t\t\t\tcolor: #333;\n\t\t\t\tdisplay: flex;\n\t\t\t\talign-items: center;\n\t\t\t\tjustify-content: center;\n\t\t\t\tborder: none;\n\t\t\t}\n\t\t\t\n\t\t\t.icon {\n\t\t\t\twidth: 36rpx;\n\t\t\t\theight: 36rpx;\n\t\t\t\tmargin-right: 8rpx;\n\t\t\t}\n\t\t}\n\t}\n\n\t.control-panel {\n\t\tpadding: 20rpx;\n\t\tbackground-color: #fff;\n\t\tborder-radius: 20rpx;\n\t\tmargin: 20rpx;\n\t\tbox-shadow: 0 4rpx 20rpx rgba(0, 0, 0, 0.08);\n\t\t\n\t\t.mode-toggle {\n\t\t\tdisplay: flex;\n\t\t\tbackground-color: #f5f7fa;\n\t\t\tborder-radius: 50rpx;\n\t\t\tmargin-bottom: 20rpx;\n\t\t\toverflow: hidden;\n\t\t\t\n\t\t\t.mode-btn {\n\t\t\t\tflex: 1;\n\t\t\t\tpadding: 16rpx;\n\t\t\t\ttext-align: center;\n\t\t\t\tbackground-color: transparent;\n\t\t\t\tborder: none;\n\t\t\t\tfont-size: 28rpx;\n\t\t\t\tcolor: #666;\n\t\t\t\t\n\t\t\t\t&.active {\n\t\t\t\t\tbackground-color: #3498db;\n\t\t\t\t\tcolor: #fff;\n\t\t\t\t\tfont-weight: 500;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t.speed-control {\n\t\t\tpadding: 10rpx 0;\n\t\t\t\n\t\t\t.speed-label {\n\t\t\t\tfont-size: 28rpx;\n\t\t\t\tcolor: #333;\n\t\t\t\tmargin-bottom: 10rpx;\n\t\t\t\tdisplay: block;\n\t\t\t}\n\t\t}\n\t}\n\n\t.info-panel {\n\t\tpadding: 20rpx;\n\t\tbackground-color: #fff;\n\t\tborder-radius: 20rpx;\n\t\tmargin: 0 20rpx 20rpx;\n\t\tbox-shadow: 0 4rpx 20rpx rgba(0, 0, 0, 0.08);\n\t\t\n\t\t.section-title {\n\t\t\tfont-size: 32rpx;\n\t\t\tfont-weight: bold;\n\t\t\tcolor: #2c3e50;\n\t\t\tmargin-bottom: 20rpx;\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\t\n\t\t\t.section-icon {\n\t\t\t\twidth: 40rpx;\n\t\t\t\theight: 40rpx;\n\t\t\t\tmargin-right: 12rpx;\n\t\t\t}\n\t\t}\n\t\t\n\t\t.scroll-container {\n\t\t\tmax-height: 200rpx;\n\t\t\tpadding: 10rpx;\n\t\t\tbackground-color: #f9f9f9;\n\t\t\tborder-radius: 12rpx;\n\t\t}\n\t\t\n\t\t.point-item {\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: space-between;\n\t\t\talign-items: center;\n\t\t\tpadding: 20rpx 0;\n\t\t\tborder-bottom: 1rpx solid #eee;\n\t\t\t\n\t\t\t.point-info {\n\t\t\t\tfont-size: 26rpx;\n\t\t\t\tcolor: #333;\n\t\t\t\tflex: 1;\n\t\t\t}\n\t\t\t\n\t\t\t.remove-btn {\n\t\t\t\tbackground: transparent;\n\t\t\t\tborder: none;\n\t\t\t\tpadding: 0;\n\t\t\t\tmargin: 0;\n\t\t\t\t\n\t\t\t\t.delete-icon {\n\t\t\t\t\twidth: 36rpx;\n\t\t\t\t\theight: 36rpx;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t.track-info {\n\t\t\t.info-item {\n\t\t\t\tpadding: 12rpx 0;\n\t\t\t\tfont-size: 28rpx;\n\t\t\t\tcolor: #333;\n\t\t\t\tborder-bottom: 1rpx solid #f0f0f0;\n\t\t\t}\n\t\t}\n\t\t\n\t\t.status-section {\n\t\t\tmargin-top: 30rpx;\n\t\t\tpadding-top: 20rpx;\n\t\t\tborder-top: 1rpx dashed #eee;\n\t\t}\n\t\t\n\t\t.status-display {\n\t\t\tpadding: 24rpx;\n\t\t\tborder-radius: 16rpx;\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\tfont-size: 32rpx;\n\t\t\tfont-weight: 500;\n\t\t\tmargin: 20rpx 0;\n\t\t\t\n\t\t\t&.in-fence {\n\t\t\t\tbackground-color: rgba(46, 204, 113, 0.1);\n\t\t\t\tcolor: #27ae60;\n\t\t\t}\n\t\t\t\n\t\t\t&.out-fence {\n\t\t\t\tbackground-color: rgba(231, 76, 60, 0.1);\n\t\t\t\tcolor: #e74c3c;\n\t\t\t}\n\t\t\t\n\t\t\t.status-icon {\n\t\t\t\twidth: 48rpx;\n\t\t\t\theight: 48rpx;\n\t\t\t\tmargin-right: 15rpx;\n\t\t\t}\n\t\t\t\n\t\t\t.status-indicator {\n\t\t\t\twidth: 20rpx;\n\t\t\t\theight: 20rpx;\n\t\t\t\tborder-radius: 50%;\n\t\t\t\tmargin-left: 15rpx;\n\t\t\t\t\n\t\t\t\t&.in {\n\t\t\t\t\tbackground-color: #2ecc71;\n\t\t\t\t\tbox-shadow: 0 0 10rpx #2ecc71;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t&.out {\n\t\t\t\t\tbackground-color: #e74c3c;\n\t\t\t\t\tbox-shadow: 0 0 10rpx #e74c3c;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t.algorithm-info {\n\t\t\tfont-size: 26rpx;\n\t\t\tcolor: #7f8c8d;\n\t\t\ttext-align: center;\n\t\t\tmargin-top: 10rpx;\n\t\t}\n\t}\n</style>","import MiniProgramPage from '/Users/xyhc/Documents/carConnectInternet/pages/index/index.uvue'\nwx.createPage(MiniProgramPage)"],"names":["reactive","ref","uni","onMounted","MiniProgramPage"],"mappings":"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"}